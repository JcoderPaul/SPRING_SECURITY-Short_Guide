plugins {
    id 'java'
    id 'war'
    id "io.freefair.lombok" version "8.3"
    id "com.github.ben-manes.versions" version "0.51.0"
}

apply from: 'version.gradle'
apply plugin: 'war'

war {
    enabled=true
}

group 'me.oldboy'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    /* Основные зависимости Spring */
    implementation "org.springframework:spring-context:${versions.spring}"
    implementation "org.springframework:spring-webmvc:${versions.spring}"
    implementation "org.springframework:spring-beans:${versions.spring}"

    /* Зависимость позволяющая использовать функционал Spring WEB */
    implementation "org.springframework.security:spring-security-web:${versions.security}"
    implementation "org.springframework.security:spring-security-config:${versions.security}"
    implementation "org.springframework.security:spring-security-taglibs:${versions.security}"

    /* Зависимость позволяющая использовать функционал JDBC Template */
    implementation "org.springframework:spring-jdbc:${versions.spring}"

    /* Зависимость позволяющая использовать функционал Spring JPA */
    implementation "org.springframework.data:spring-data-jpa:${versions.data_jpa}"

    /* Подключаем функционал Hibernate и провайдера валидации */
    implementation "org.hibernate:hibernate-core:${versions.hibernate}"

    /* Зависимость PostgreSQL */
    implementation "org.postgresql:postgresql:${versions.postgres}"

    /* Зависимость позволяющая в контроллерах принимать JSON запросы */
    implementation "com.fasterxml.jackson.core:jackson-databind:${versions.jackson}"

    /* Зависимость позволяющая читать YAML файлы */
    implementation "org.yaml:snakeyaml:${versions.snakeyaml}"

    /* Зависимость отвечающая за работу аннотаций и сервлетов */
    implementation "jakarta.servlet:jakarta.servlet-api:${versions.jakarta_servlet_api}"
    implementation "jakarta.persistence:jakarta.persistence-api:${versions.jakarta_persistence_api}"
    implementation "jakarta.annotation:jakarta.annotation-api:${versions.jakarta_annotation}"

    /* Зависимость отвечающая за работу AOP функционала */
    implementation "org.aspectj:aspectjweaver:${versions.aspectj}"

    /*
    Зависимости отвечающие за работу с тестами; многие зависимости, примененные ниже в Spring Boot
    подтягиваются транзитивно с парой "boot-starter" зависимостей и файл настройки выглядит более
    компактно, см. далее в Spring Boot проектах этого репозитория.
    */
    testImplementation "org.springframework:spring-test:${versions.spring}"
    testImplementation "org.springframework.security:spring-security-test:${versions.security}"

    /* Подключим Junit5 */
    testImplementation "org.junit.jupiter:junit-jupiter-api:${versions.junit}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${versions.junit}"

    /* Подключим Mockito и AssertJ */
    testImplementation "org.mockito:mockito-core:${versions.mockito}"
    testRuntimeOnly "org.mockito:mockito-core:${versions.mockito}"
    testImplementation "org.mockito:mockito-junit-jupiter:${versions.mockito}"
    testImplementation "org.assertj:assertj-core:${versions.assertj}"
    testRuntimeOnly "org.assertj:assertj-core:${versions.assertj}"

    testImplementation "org.hamcrest:hamcrest:${versions.hamcrest}"

    /* Подключим тестовую inMemory БД */
    testImplementation "com.h2database:h2:${versions.h2}"

    /* Подключим log4j */
    implementation "org.slf4j:slf4j-log4j12:${versions.slf4j_log4j_binding}"
}

test {
    useJUnitPlatform()
}

wrapper {
    gradleVersion '8.2.1'
}